<div class="container-login">
  <img src="/img/1109.png" alt="Logo E-Reciclagem" class="logo" />

  <div class="button_home">
    <button
      class="btn entrar"
      onclick="window.location.href='/login'"
    >Entrar</button>
    <button
      class="btn cadastrar " 
      onclick="window.location.href='/cadastrar'"
    >Quero me cadastrar</button>
  </div>
</div>

<!-- Formulário para adicionar pontos de coleta -->
<div class="container-form" style="margin: 20px; padding: 20px; background-color: #f8f9fa; border-radius: 8px;">
  <h3>Adicionar Ponto de Coleta</h3>
  <form id="formPontoColeta" style="display: flex; flex-direction: column; gap: 10px;">
    <input type="text" id="cep" placeholder="CEP" style="padding: 8px; border-radius: 4px; border: 1px solid #ddd;">
    <input type="text" id="nome" placeholder="Nome do Ponto de Coleta" style="padding: 8px; border-radius: 4px; border: 1px solid #ddd;">
    <input type="text" id="endereco" placeholder="Endereço" style="padding: 8px; border-radius: 4px; border: 1px solid #ddd;">
    <select id="tipoMaterial" style="padding: 8px; border-radius: 4px; border: 1px solid #ddd;">
      <option value="">Selecione o tipo de material</option>
      <option value="papel">Papel</option>
      <option value="plastico">Plástico</option>
      <option value="vidro">Vidro</option>
      <option value="metal">Metal</option>
      <option value="eletronicos">Eletrônicos</option>
    </select>
    <button type="submit" style="padding: 10px; background-color: #28a745; color: white; border: none; border-radius: 4px; cursor: pointer;">
      Adicionar Ponto de Coleta
    </button>
  </form>
</div>

<link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
<script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>

<div id="map" style="height: 400px; width: 100%; margin: 20px;"></div>

<script>
  // Inicialização do mapa
  var map = L.map('map').setView([-23.5505, -46.6333], 13);
  var markers = L.layerGroup().addTo(map);

  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
    maxZoom: 19,
    attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
  }).addTo(map);

  // Array para armazenar os pontos de coleta
  let pontosDeColeta = [];

  // Função para adicionar marcador no mapa
  function adicionarMarcador(lat, lng, info) {
    const marker = L.marker([lat, lng]).addTo(map);
    marker.bindPopup(info);
    return marker;
  }

  // Função para buscar coordenadas pelo CEP
  async function buscarCoordenadasPorCEP(cep) {
    const apiKey = '3a2a3e1764574c0891c0c4d4d88938ee';
    try {
      const response = await fetch(`https://api.opencagedata.com/geocode/v1/json?q=${cep}&key=${apiKey}`);
      const data = await response.json();
      if (data.results && data.results.length > 0) {
        return data.results[0].geometry;
      }
      throw new Error('CEP não encontrado');
    } catch (error) {
      console.error('Erro ao buscar coordenadas:', error);
      throw error;
    }
  }

  // Manipulador do formulário
  document.getElementById('formPontoColeta').addEventListener('submit', async function(e) {
    e.preventDefault();
    
    const cep = document.getElementById('cep').value;
    const nome = document.getElementById('nome').value;
    const endereco = document.getElementById('endereco').value;
    const tipoMaterial = document.getElementById('tipoMaterial').value;

    try {
      const coordenadas = await buscarCoordenadasPorCEP(cep);
      
      const pontoColeta = {
        lat: coordenadas.lat,
        lng: coordenadas.lng,
        nome: nome,
        endereco: endereco,
        tipoMaterial: tipoMaterial
      };

      // Adicionar ao array de pontos
      pontosDeColeta.push(pontoColeta);

      // Criar popup com informações
      const popupInfo = `
        <strong>${nome}</strong><br>
        Endereço: ${endereco}<br>
        Material: ${tipoMaterial}<br>
        CEP: ${cep}
      `;

      // Adicionar marcador no mapa
      adicionarMarcador(coordenadas.lat, coordenadas.lng, popupInfo);

      // Limpar formulário
      this.reset();

      // Salvar no localStorage
      localStorage.setItem('pontosDeColeta', JSON.stringify(pontosDeColeta));

    } catch (error) {
      alert('Erro ao adicionar ponto de coleta. Verifique o CEP e tente novamente.');
    }
  });

  // Carregar pontos salvos ao iniciar
  window.addEventListener('load', function() {
    const pontosSalvos = localStorage.getItem('pontosDeColeta');
    if (pontosSalvos) {
      pontosDeColeta = JSON.parse(pontosSalvos);
      pontosDeColeta.forEach(ponto => {
        const popupInfo = `
          <strong>${ponto.nome}</strong><br>
          Endereço: ${ponto.endereco}<br>
          Material: ${ponto.tipoMaterial}
        `;
        adicionarMarcador(ponto.lat, ponto.lng, popupInfo);
      });
    }
  });
</script>